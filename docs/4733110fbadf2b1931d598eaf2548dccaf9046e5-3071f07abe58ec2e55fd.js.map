{"version":3,"file":"4733110fbadf2b1931d598eaf2548dccaf9046e5-3071f07abe58ec2e55fd.js","mappings":"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","sources":["webpack://website-cyt/./node_modules/camelcase/index.js","webpack://website-cyt/../src/image-utils.ts","webpack://website-cyt/../src/components/hooks.ts","webpack://website-cyt/../src/components/layout-wrapper.tsx","webpack://website-cyt/../src/components/picture.tsx","webpack://website-cyt/../src/components/placeholder.tsx","webpack://website-cyt/../src/components/main-image.tsx","webpack://website-cyt/../src/components/gatsby-image.server.tsx","webpack://website-cyt/../src/components/gatsby-image.browser.tsx","webpack://website-cyt/../src/components/static-image.server.tsx","webpack://website-cyt/../src/components/static-image.tsx","webpack://website-cyt/./src/images/logo.js","webpack://website-cyt/./src/components/Navbar/index.js","webpack://website-cyt/./src/components/Navbar/styles.module.css"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from 'react'\r\nexport default function Logo(){return (<svg width=\"524.5500000000001\" height=\"95.03570370110695\" viewBox=\"0 -9 420 76.09378620620515\" className=\"css-1j8o68f\"><defs id=\"SvgjsDefs2568\"><linearGradient id=\"SvgjsLinearGradient2575\"><stop id=\"SvgjsStop2576\" stopColor=\"#00ddff\" offset=\"0\"></stop><stop id=\"SvgjsStop2577\" stopColor=\"#ff00d4\" offset=\"1\"></stop></linearGradient><linearGradient id=\"SvgjsLinearGradient2578\"><stop id=\"SvgjsStop2579\" stopColor=\"#7f00ff\" offset=\"0\"></stop><stop id=\"SvgjsStop2580\" stopColor=\"#e100ff\" offset=\"1\"></stop></linearGradient><linearGradient id=\"SvgjsLinearGradient2581\"><stop id=\"SvgjsStop2582\" stopColor=\"#7f00ff\" offset=\"0\"></stop><stop id=\"SvgjsStop2583\" stopColor=\"#e100ff\" offset=\"1\"></stop></linearGradient></defs><g id=\"SvgjsG2569\" featurekey=\"symbolFeature-0\" transform=\"matrix(22.177412033081055,0,0,22.177412033081055,-5.344349828029117,-30.896661594889814)\" fill=\"url(#SvgjsLinearGradient2575)\"><title xmlns=\"http://www.w3.org/2000/svg\">abstract</title><g xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"M4.56576,3.4977c-.07875-.05621-.14425-.1018-.16046-.08432-.01589.01671.02492.09646.105.1637.07971.06787.16731.08655.18182.05814C4.707,3.60652,4.64417,3.554,4.56576,3.4977Z\"></path><path d=\"M4.32354,3.53219c-.07148-.07522-.13012-.12067-.1425-.09063-.012.02956.03125.12568.10766.2051.0762.08.15283.10771.1599.0734C4.456,3.68568,4.39483,3.60756,4.32354,3.53219Z\"></path><path d=\"M4.08307,3.536c-.06765-.0799-.12363-.11216-.13314-.06568a.37136.37136,0,0,0,.11327.23535c.0752.08157.144.10262.14566.05491A.48615.48615,0,0,0,4.08307,3.536Z\"></path><path d=\"M3.83748,3.53784c-.067-.076-.12342-.08874-.13046-.02506a.39532.39532,0,0,0,.12191.25655c.07618.077.14.08291.13769.01849A.51114.51114,0,0,0,3.83748,3.53784Z\"></path><path d=\"M3.582,3.54712c-.06887-.06724-.12772-.05844-.13277.02168a.393.393,0,0,0,.13261.27115c.07894.069.14029.05547.13517-.026A.48327.48327,0,0,0,3.582,3.54712Z\"></path><path d=\"M3.31327,3.56349c-.0727-.05655-.13564-.02674-.13925.068a.37568.37568,0,0,0,.14433.28124c.08319.05989.14457.02584.13777-.072A.43376.43376,0,0,0,3.31327,3.56349Z\"></path><path d=\"M3.037,3.6056c-.07474-.057-.14207-.028-.14991.06542a.36077.36077,0,0,0,.13883.28262c.08463.06256.15172.031.14957-.06765A.40629.40629,0,0,0,3.037,3.6056Z\"></path><path d=\"M2.74469,3.65646c-.07551-.06356-.14624-.048-.15948.03364a.34244.34244,0,0,0,.12655.27374c.08394.07036.15751.05551.162-.03286A.38533.38533,0,0,0,2.74469,3.65646Z\"></path><path d=\"M2.43349,3.6921c-.07506-.07-.14823-.06891-.16639.00011a.31751.31751,0,0,0,.11256.26127c.08176.07693.16022.07957.17135.00375A.35911.35911,0,0,0,2.43349,3.6921Z\"></path><path d=\"M2.10758,3.709c-.07167-.07864-.14583-.09494-.1698-.04043a.28523.28523,0,0,0,.09118.24727c.07622.08443.15792.10775.177.04752A.3271.3271,0,0,0,2.10758,3.709Z\"></path><path d=\"M1.76357,3.69786c-.06736-.08239-.1398-.11083-.16641-.0685-.0263.04244.005.14239.075.22878s.15026.1233.174.07671C1.87,3.88851,1.83081,3.77991,1.76357,3.69786Z\"></path><path d=\"M1.41074,3.66244c-.06124-.08409-.13-.12274-.1576-.091-.02737.03186-.00282.12341.05927.2097.06195.0861.138.13322.16456.09917S1.47185,3.74642,1.41074,3.66244Z\"></path><path d=\"M1.05666,3.60764c-.054-.08447-.11707-.13121-.14428-.10845-.027.023-.008.10759.04554.19254s.12228.13838.14962.1148S1.1105,3.69173,1.05666,3.60764Z\"></path><path d=\"M.70929,3.53947C.66284,3.45515.60622,3.40095.58073,3.41654s-.01047.09531.03513.17963c.04542.08432.10545.14191.13172.12635S.75567,3.62375.70929,3.53947Z\"></path><ellipse cx=\"0.33283\" cy=\"3.47913\" rx=\"0.0456\" ry=\"0.1719\" transform=\"translate(-1.27067 0.37367) rotate(-21.84494)\"></ellipse></g><g><path d=\"M4.30661,3.0675c-.04185-.07834-.07873-.13856-.09568-.12516-.0165.013-.0038.09828.04148.18223.045.08435.10251.12942.11569.11057C4.38154,3.216,4.34817,3.14617,4.30661,3.0675Z\"></path><path d=\"M4.11919,3.041c-.0406-.08484-.07982-.13626-.09778-.10845a.29915.29915,0,0,0,.0453.21211c.04693.08725.10214.12806.1133.09809A.42083.42083,0,0,0,4.11919,3.041Z\"></path><path d=\"M3.91446,3.01281c-.04227-.08365-.08654-.11925-.10543-.07537a.32861.32861,0,0,0,.05319.23428c.05083.08428.10567.1128.11572.06869A.46285.46285,0,0,0,3.91446,3.01281Z\"></path><path d=\"M3.6914,2.99276c-.04644-.07741-.09741-.09334-.11672-.03345a.33259.33259,0,0,0,.06449.24942c.05614.07745.11215.08937.12164.02967A.44937.44937,0,0,0,3.6914,2.99276Z\"></path><path d=\"M3.45,2.98318c-.0524-.06794-.11085-.06282-.13012.012a.32.32,0,0,0,.07812.259c.06244.06839.1209.0613.13012-.01352A.40682.40682,0,0,0,3.45,2.98318Z\"></path><path d=\"M3.191,2.98244c-.05973-.05677-.12581-.03137-.1447.05647a.29937.29937,0,0,0,.09289.26432c.06945.05851.1315.03237.1408-.05692A.35579.35579,0,0,0,3.191,2.98244Z\"></path><path d=\"M2.9192,3.00936c-.06265-.0558-.13248-.03011-.1535.05614a.28456.28456,0,0,0,.09215.26153c.07142.05889.13822.034.15057-.0551A.32873.32873,0,0,0,2.9192,3.00936Z\"></path><path d=\"M2.63158,3.04942c-.06335-.05985-.13373-.04541-.15669.03033a.26986.26986,0,0,0,.086.25043c.07062.06375.14093.05187.15658-.02755A.30929.30929,0,0,0,2.63158,3.04942Z\"></path><path d=\"M2.33013,3.0829c-.063-.064-.13333-.06115-.158.00379a.253.253,0,0,0,.07866.23747c.0687.0678.14124.06894.16.00037A.28761.28761,0,0,0,2.33013,3.0829Z\"></path><path d=\"M2.01936,3.10823c-.06009-.07047-.12936-.0822-.15671-.02944a.23449.23449,0,0,0,.0645.22533c.06412.0734.13746.09067.1607.0349A.26643.26643,0,0,0,2.01936,3.10823Z\"></path><path d=\"M1.69589,3.11759c-.05722-.07315-.12426-.09512-.15216-.05239-.0277.04262-.004.13518.05568.21037s.13122.10288.15651.058A.24082.24082,0,0,0,1.69589,3.11759Z\"></path><path d=\"M1.36587,3.11313c-.05331-.07507-.1172-.10615-.14486-.07255-.02742.03342-.00749.11989.047.19607s.12252.11254.14885.07778S1.41915,3.18794,1.36587,3.11313Z\"></path><path d=\"M1.033,3.096c-.04878-.07652-.10851-.1161-.13519-.09067s-.00978.10693.03923.18386c.04883.077.11181.12044.13814.09438S1.08173,3.17235,1.033,3.096Z\"></path><path d=\"M.70132,3.06765c-.04393-.07827-.09905-.126-.12415-.10778s-.01059.09635.03308.17484.10046.128.12579.10945S.74523,3.146.70132,3.06765Z\"></path><ellipse cx=\"0.33238\" cy=\"3.0506\" rx=\"0.04742\" ry=\"0.16412\" transform=\"translate(-1.36821 0.49626) rotate(-27.43615)\"></ellipse></g><g><path d=\"M4.23719,2.58026c-.00781-.08656-.0207-.1533-.04153-.14445-.02049.00873-.03723.0936-.02487.18464.012.09135.04475.15013.06069.1368A.36726.36726,0,0,0,4.23719,2.58026Z\"></path><path d=\"M4.07672,2.51316c-.01129-.08922-.03406-.14532-.06013-.12046a.29867.29867,0,0,0-.02.21323c.01855.09126.05591.13986.07421.11331A.43431.43431,0,0,0,4.07672,2.51316Z\"></path><path d=\"M3.88929,2.4588c-.01761-.08649-.05234-.12581-.08271-.08387a.31749.31749,0,0,0-.01.23457c.02689.08645.07025.11979.09114.07829A.44686.44686,0,0,0,3.88929,2.4588Z\"></path><path d=\"M3.67628,2.42115c-.02638-.07947-.07376-.09818-.10724-.03947a.30892.30892,0,0,0,.00444.24846c.03637.07825.08644.09343.10979.03624A.41547.41547,0,0,0,3.67628,2.42115Z\"></path><path d=\"M3.43983,2.40029c-.03667-.06939-.09664-.06579-.13174.00819A.28532.28532,0,0,0,3.33,2.6646c.04642.06789.10365.06358.129-.00869A.36484.36484,0,0,0,3.43983,2.40029Z\"></path><path d=\"M3.18257,2.39383c-.04785-.05738-.11954-.03184-.155.05534a.25682.25682,0,0,0,.04113.25871c.05665.05677.12116.03289.14811-.05348A.3095.3095,0,0,0,3.18257,2.39383Z\"></path><path d=\"M2.90666,2.42056c-.05219-.055-.12709-.02783-.16259.05814a.24225.24225,0,0,0,.04647.25368c.05973.05551.12823.03145.15637-.05482A.2834.2834,0,0,0,2.90666,2.42056Z\"></path><path d=\"M2.61351,2.46625a.092.092,0,0,0-.16033.0356.23.23,0,0,0,.04764.24126.08729.08729,0,0,0,.15679-.03141A.26471.26471,0,0,0,2.61351,2.46625Z\"></path><path d=\"M2.30914,2.51134a.08873.08873,0,0,0-.15706.01206.21763.21763,0,0,0,.04773.22773c.05855.06171.12811.05952.15564-.00746A.246.246,0,0,0,2.30914,2.51134Z\"></path><path d=\"M1.99835,2.55389c-.05145-.06577-.11954-.07286-.15189-.01864a.20786.20786,0,0,0,.041.21636c.05513.06675.12373.07856.15242.02339A.23305.23305,0,0,0,1.99835,2.55389Z\"></path><path d=\"M1.67817,2.58571c-.0502-.068-.11545-.08473-.14607-.04017a.19561.19561,0,0,0,.03925.20263c.05254.06861.11909.08981.14728.04444A.2143.2143,0,0,0,1.67817,2.58571Z\"></path><path d=\"M1.35348,2.6073c-.04828-.06988-.1104-.09585-.1393-.06013s-.01255.11981.03693.19011.113.09995.14051.06379S1.40162,2.67715,1.35348,2.6073Z\"></path><path d=\"M1.02624,2.61779C.98061,2.54581.922,2.511.895,2.53852s-.01185.10745.03432.17972.10579.10956.13224.08172S1.07186,2.68972,1.02624,2.61779Z\"></path><path d=\"M.699,2.6163c-.04263-.07467-.0973-.11836-.12248-.0982-.025.02012-.011.09705.03166.17207S.706,2.8099.7311,2.78934.74162,2.691.699,2.6163Z\"></path><ellipse cx=\"0.33222\" cy=\"2.6261\" rx=\"0.04872\" ry=\"0.15971\" transform=\"translate(-1.28584 0.53119) rotate(-30.47155)\"></ellipse></g><g><path d=\"M4.359,2.09983c.02614-.08686.03815-.16219.01344-.16535-.02439-.00316-.07211.07277-.09366.16591-.02192.09319-.01313.16364.0067.16067C4.3056,2.2579,4.33257,2.187,4.359,2.09983Z\"></path><path d=\"M4.22324,1.95315c.01966-.09295.01421-.15984-.02136-.14346a.31344.31344,0,0,0-.09175.20675c-.01177.09556.008.15386.03523.13528A.42858.42858,0,0,0,4.22324,1.95315Z\"></path><path d=\"M4.0472,1.84032c.00856-.0922-.01724-.14094-.062-.10282a.35352.35352,0,0,0-.0808.23734c.00151.09113.03438.13132.06871.09477A.46443.46443,0,0,0,4.0472,1.84032Z\"></path><path d=\"M3.83337,1.76722c-.00585-.08514-.05261-.10893-.10373-.04927a.34217.34217,0,0,0-.06226.25646c.01639.08127.06281.09959.10339.04414A.43688.43688,0,0,0,3.83337,1.76722Z\"></path><path d=\"M3.58644,1.73358c-.02216-.073-.08837-.06859-.14311.01036a.29989.29989,0,0,0-.03826.26491c.03167.068.09108.0628.13636-.01082A.37394.37394,0,0,0,3.58644,1.73358Z\"></path><path d=\"M3.31216,1.73427c-.03892-.05777-.122-.02517-.17738.0695a.25071.25071,0,0,0-.01119.26519c.04647.05341.11773.02482.166-.06548A.302.302,0,0,0,3.31216,1.73427Z\"></path><path d=\"M3.01156,1.78509c-.04536-.0528-.13092-.01558-.18342.07867a.22944.22944,0,0,0,.0026.2578c.05139.05011.12586.01868.17268-.07284A.26916.26916,0,0,0,3.01156,1.78509Z\"></path><path d=\"M2.69208,1.86635c-.04714-.054-.12781-.02645-.17465.05727a.21547.21547,0,0,0,.01289.24347c.05195.05259.1247.031.16673-.05141A.24655.24655,0,0,0,2.69208,1.86635Z\"></path><path d=\"M2.36492,1.952c-.0482-.056-.12419-.03971-.16582.03264a.203.203,0,0,0,.02132.2284.093.093,0,0,0,.16046-.02718A.22682.22682,0,0,0,2.36492,1.952Z\"></path><path d=\"M2.03562,2.03541a.08937.08937,0,0,0-.15579-.001.19724.19724,0,0,0,.02159.21672c.04967.06147.11748.06521.15285.00574A.21765.21765,0,0,0,2.03562,2.03541Z\"></path><path d=\"M1.70171,2.10521c-.04646-.06431-.11321-.07466-.14764-.026a.18686.18686,0,0,0,.02638.20235c.04856.06423.1136.07858.14589.02983A.20133.20133,0,0,0,1.70171,2.10521Z\"></path><path d=\"M1.36712,2.1587c-.04572-.067-.10871-.0884-.13976-.04992a.17936.17936,0,0,0,.02943.18963c.04694.06715.109.09163.13871.053A.18937.18937,0,0,0,1.36712,2.1587Z\"></path><path d=\"M1.0332,2.1926C.98886,2.12244.92964,2.09018.90155,2.11913s-.014.10882.03087.17942.10353.10475.13094.07528S1.07749,2.26262,1.0332,2.1926Z\"></path><path d=\"M.70157,2.20347c-.04227-.07413-.09746-.11732-.123-.09709s-.01161.09744.03078.17233.09714.11872.12252.09763S.74382,2.27762.70157,2.20347Z\"></path><ellipse cx=\"0.33231\" cy=\"2.21043\" rx=\"0.04807\" ry=\"0.16199\" transform=\"translate(-1.02419 0.43382) rotate(-28.81313)\"></ellipse></g><g><path d=\"M4.67228,1.69491c.06015-.07767.09666-.1606.06765-.18124-.02864-.02059-.107.03882-.16176.12719-.05519.08847-.07036.16537-.04708.17543C4.55475,1.82616,4.6118,1.7729,4.67228,1.69491Z\"></path><path d=\"M4.55818,1.4469c.04934-.0944.05941-.17641.01366-.17318-.04549.00317-.12148.09382-.16152.19284-.04025.0993-.03651.16717-.00029.15958C4.4464,1.61819,4.5086,1.54159,4.55818,1.4469Z\"></path><path d=\"M4.3851,1.25006c.03255-.10062.01291-.16522-.0469-.13353a.40863.40863,0,0,0-.14853.243c-.02123.099.00364.14857.05195.11924A.47548.47548,0,0,0,4.3851,1.25006Z\"></path><path d=\"M4.15808,1.11671c.01164-.09629-.0377-.13121-.10758-.07078a.41865.41865,0,0,0-.125.27488c-.00037.08957.04573.11424.10437.061A.48419.48419,0,0,0,4.15808,1.11671Z\"></path><path d=\"M3.88536,1.04888c-.01113-.08324-.08747-.08216-.16309.004a.36527.36527,0,0,0-.09411.2893c.02075.07409.08649.07042.15267-.00622A.42871.42871,0,0,0,3.88536,1.04888Z\"></path><path d=\"M3.57674,1.04008c-.03406-.06438-.13288-.0266-.20991.08a.2893.2893,0,0,0-.05883.2898c.04047.05578.12334.02341.19418-.07452A.34245.34245,0,0,0,3.57674,1.04008Z\"></path><path d=\"M3.23268,1.10491c-.04256-.05606-.14353-.00912-.21506.09846-.07158.1073-.08423.23-.03725.28.04724.05.13288.01158.20016-.08992C3.24751,1.29222,3.27546,1.16093,3.23268,1.10491Z\"></path><path d=\"M2.86718,1.21741c-.04482-.05514-.13774-.0168-.19946.07917a.23171.23171,0,0,0-.01881.26186c.04836.05123.12932.02168.18767-.0706A.26594.26594,0,0,0,2.86718,1.21741Z\"></path><path d=\"M2.49747,1.34338c-.04626-.05563-.13159-.02915-.18439.0538a.21136.21136,0,0,0-.0027.24254c.049.05335.12528.03449.17534-.04608A.23651.23651,0,0,0,2.49747,1.34338Z\"></path><path d=\"M2.13075,1.47055a.09809.09809,0,0,0-.16814.017.20254.20254,0,0,0,.00377.22758.09323.09323,0,0,0,.16185-.01077A.22286.22286,0,0,0,2.13075,1.47055Z\"></path><path d=\"M1.7656,1.58323a.0915.0915,0,0,0-.15615-.01093.187.187,0,0,0,.01483.20929c.04674.06191.11353.07023.15161.01583A.20067.20067,0,0,0,1.7656,1.58323Z\"></path><path d=\"M1.40611,1.67533c-.045-.06507-.11133-.0809-.14565-.038a.17624.17624,0,0,0,.023.19331c.04606.0649.10915.08462.14234.04182A.18533.18533,0,0,0,1.40611,1.67533Z\"></path><path d=\"M1.05336,1.741C1.009,1.67265.94747,1.64445.91756,1.6761S.901,1.788.94582,1.85671s.10424.09937.13356.06726S1.09776,1.80915,1.05336,1.741Z\"></path><path d=\"M.70884,1.77435C.66608,1.70167.60942,1.66066.58316,1.68208s-.01238.09841.03042.1722.09818.11554.12438.093S.75158,1.847.70884,1.77435Z\"></path><ellipse cx=\"0.33267\" cy=\"1.79162\" rx=\"0.04838\" ry=\"0.16208\" transform=\"matrix(0.87629, -0.48178, 0.48178, 0.87629, -0.82202, 0.38191)\"></ellipse></g></g></g><g id=\"SvgjsG2570\" featurekey=\"nameFeature-0\" transform=\"matrix(1.3461124897003174,0,0,1.3461124897003174,117.8462213656338,-14.04566530034273)\" fill=\"url(#SvgjsLinearGradient2578)\"><path d=\"M20.92 38.56 l-4.6 0 l-5.52 -10.28 l-3.72 0.04 l0 10.24 l-4.04 0 l0 -26.56 l-1.44 0 l0 28 l6.96 0 l0 -10.28 l1.4 0 l5.48 10.28 l7.88 0 l-5.52 -10.32 l-1.32 0.52 z M11.4 13.440000000000001 c5.8 0 9.08 2.6 9.08 7.36 c0 4.32 -2.6 6.96 -7.12 7.44 l-1.08 0.12 l5 9.24 l1.64 0 l-4.36 -8.12 c4.8 -0.84 7.36 -3.76 7.36 -8.68 c0 -1.64 -0.36 -3.12 -1.04 -4.44 c-1.6 -2.84 -4.88 -4.36 -9.48 -4.36 l-7.08 0 l0 25.56 l1.44 0 l0 -24.12 l5.64 0 z M11.08 27.04 c5.48 0 8.08 -1.88 8.08 -6.04 c0 -3.96 -2.72 -6.2 -7.08 -6.2 l-5.04 0 l0 4.2 l4.6 0 c2.12 0 3.2 0.6 3.2 1.8 c0 1.4 -1.32 2.08 -4 2.08 l-2.32 0 l0 -2.48 l-1.48 0 l0 3.92 l3.8 0 c3.56 0 5.44 -1.24 5.44 -3.52 c0 -0.72 -0.16 -1.28 -0.52 -1.72 c-0.68 -1 -2.04 -1.48 -4.12 -1.48 l-3.12 0 l0 -1.36 l3.56 0 c3.56 0 5.64 1.72 5.64 4.76 c0 3.16 -2.12 4.64 -6.64 4.64 l-4 0 l0 1.4 l4 0 z M26.76 12 l4.2 0 l0 25.32 l-1.44 0 l0 -23.88 l-1.32 0 l0 25.12 l4.04 0 l0 -26.56 l1.44 0 l0 28 l-6.92 0 l0 -28 z M45.52 17.2 l9.56 0 l0 -3.8 l-17 0 l0 1.24 l15.64 0 l0 1.44 l-17.08 0 l0 -4.12 l19.88 0 l0 6.68 l-9.56 0 l0 18.72 l-1.44 0 l0 -20.16 z M42.84 18.64 l-6.2 0 l0 -1.44 l7.64 0 l0 21.32 l4 0 l0 -18.64 l1.44 0 l0 20.12 l-6.88 0 l0 -21.36 z M63.2 37.52 l1.76 0 l1.4 -3.36 l10.44 0.04 l2.56 5.8 l7.36 -0.04 l-12.6 -27.96 l-2.56 0 l-12.52 27.96 l7.8 0 l1.36 -3.2 l7.96 0 l-0.6 -1.36 l-8.24 0 l-1.28 3.16 l-4.76 0 l11.08 -25.2 l0.96 0 l11.12 25.2 l-4.24 0 l-2.56 -5.72 l-12.4 0 z M67.96000000000001 30.48 l4.88 -11.64 l8.2 18.64 l1.64 0 l-9.84 -21.92 l-7.2 16.16 l11.6 0 l-4.4 -9.72 l-3.04 7.32 l1.56 0 l1.48 -3.64 l2.2 4.8 l-7.08 0 z M124.44 30.880000000000003 c-2.52 1.64 -3.76 2.12 -5.48 2.12 c-1.2 0 -2.32 -0.32 -3.4 -0.96 c-2.12 -1.28 -3.56 -3.6 -3.56 -6 c0 -1.28 0.32 -2.48 0.96 -3.56 c1.24 -2.16 3.6 -3.44 6 -3.44 c1.52 0 2.88 0.44 4.04 1.28 c0.2 0.12 0.44 0.28 0.72 0.56 l0.6 0.44 l2.68 -3.16 l-0.44 -0.44 c-0.28 -0.28 -0.64 -0.52 -1.08 -0.8 c-1.88 -1.44 -4.08 -2.16 -6.52 -2.16 c-3 0 -5.76 1.16 -7.96 3.28 c-2.12 2.24 -3.32 5 -3.32 8 s1.2 5.84 3.32 7.96 s4.96 3.32 7.96 3.32 c2.16 0 4.16 -0.6 6.04 -1.8 l-0.8 -1.2 c-1.64 1.08 -3.36 1.6 -5.24 1.6 c-2.6 0 -5.08 -1.04 -6.96 -2.92 s-2.88 -4.36 -2.88 -6.96 s1 -5.04 2.88 -6.92 c1.88 -1.92 4.36 -2.92 6.96 -2.92 c1.96 0 3.84 0.6 5.72 1.84 l0.32 0.28 l-0.88 1 c-0.12 -0.04 -0.2 -0.08 -0.28 -0.16 c-1.48 -1 -3.12 -1.52 -4.88 -1.52 c-1.56 0 -2.96 0.36 -4.2 1.08 c-2.52 1.48 -4.2 4.4 -4.2 7.32 c0 1.4 0.4 2.8 1.16 4.12 c1.56 2.68 4.4 4.32 7.24 4.32 c1.88 0 3.4 -0.56 5.68 -2 l2.24 3.32 c-2.92 1.92 -5.2 2.72 -7.92 2.72 c-2.24 0 -4.32 -0.56 -6.24 -1.68 c-3.88 -2.24 -6.28 -6.32 -6.28 -10.8 c0 -2.24 0.56 -4.32 1.68 -6.28 c2.24 -3.84 6.36 -6.24 10.84 -6.24 c3.16 0 6.16 1.16 8.44 3.28 l0.24 0.2 l0.32 0.32 l1 -1.04 l-0.56 -0.56 c-2.56 -2.28 -5.92 -3.6 -9.44 -3.6 c-2.52 0 -4.84 0.6 -6.96 1.84 c-4.24 2.44 -7 7.12 -7 12.08 c0 2.44 0.64 4.76 1.92 6.92 c2.52 4.32 7.04 7.04 12.04 7.04 c3.16 0 5.8 -1 9.36 -3.44 l0.56 -0.36 l-3.8 -5.72 z M133.28 37.52 l1.76 0 l1.4 -3.36 l10.44 0.04 l2.56 5.8 l7.36 -0.04 l-12.6 -27.96 l-2.56 0 l-12.52 27.96 l7.8 0 l1.36 -3.2 l7.96 0 l-0.6 -1.36 l-8.24 0 l-1.28 3.16 l-4.76 0 l11.08 -25.2 l0.96 0 l11.12 25.2 l-4.24 0 l-2.56 -5.72 l-12.4 0 z M138.04 30.48 l4.88 -11.64 l8.2 18.64 l1.64 0 l-9.84 -21.92 l-7.2 16.16 l11.6 0 l-4.4 -9.72 l-3.04 7.32 l1.56 0 l1.48 -3.64 l2.2 4.8 l-7.08 0 z M173.28000000000003 40 c-2.44 0 -4.76 -0.64 -6.96 -1.92 c-4.4 -2.52 -7.12 -7.16 -7.12 -12.12 c0 -2.48 0.64 -4.8 1.92 -7 c2.52 -4.32 7.24 -7.04 12.16 -7.04 c2.44 0 4.8 0.64 7 1.88 c4.4 2.56 7.04 7.32 7.04 12.16 c0 2.44 -0.64 4.72 -1.88 6.92 c-2.56 4.4 -7.2 7.12 -12.16 7.12 z M173.28000000000003 13.32 c-2.28 0 -4.4 0.56 -6.32 1.68 c-3.88 2.24 -6.28 6.36 -6.28 10.96 c0 2.28 0.56 4.4 1.68 6.32 c2.24 3.88 6.32 6.28 10.92 6.28 c2.28 0 4.4 -0.56 6.36 -1.68 c3.88 -2.24 6.28 -6.32 6.28 -10.92 c0 -2.28 -0.56 -4.4 -1.68 -6.36 c-2.24 -3.88 -6.48 -6.28 -10.96 -6.28 z M173.28000000000003 37.28 c-2 0 -3.88 -0.52 -5.68 -1.52 c-3.56 -2.04 -5.76 -5.76 -5.76 -9.8 c0 -2.04 0.52 -3.92 1.52 -5.68 c2.04 -3.52 5.64 -5.6 9.92 -5.6 c2.16 0 4.12 0.48 5.84 1.44 c3.44 1.92 5.44 5.52 5.44 9.84 c0 2.04 -0.48 3.92 -1.44 5.64 c-1.96 3.48 -5.8 5.68 -9.84 5.68 z M173.28000000000003 16.08 c-1.8 0 -3.44 0.44 -4.96 1.32 c-3.08 1.76 -4.96 4.92 -4.96 8.56 c0 1.76 0.44 3.4 1.36 4.92 c1.76 3.08 4.88 5 8.56 5 c1.8 0 3.44 -0.44 4.96 -1.36 c3 -1.76 4.92 -5.04 4.92 -8.56 c0 -1.8 -0.44 -3.48 -1.32 -5 c-1.76 -3.04 -5.08 -4.88 -8.56 -4.88 z M173.28000000000003 34.68 c-1.56 0 -3.04 -0.4 -4.36 -1.16 c-2.68 -1.56 -4.4 -4.52 -4.4 -7.56 c0 -1.56 0.4 -3.04 1.2 -4.4 c1.56 -2.72 4.32 -4.28 7.56 -4.28 c1.56 0 3 0.4 4.32 1.16 c2.68 1.56 4.24 4.28 4.24 7.52 c0 1.6 -0.36 3.04 -1.08 4.36 c-1.48 2.64 -4.32 4.36 -7.48 4.36 z M173.28000000000003 18.72 c-1.28 0 -2.48 0.32 -3.6 0.96 c-2.24 1.32 -3.68 3.68 -3.68 6.28 c0 1.28 0.32 2.48 0.96 3.56 c1.28 2.24 3.6 3.6 6.32 3.6 c1.32 0 2.56 -0.32 3.64 -0.96 c2.2 -1.28 3.52 -3.64 3.52 -6.2 c0 -1.32 -0.32 -2.52 -0.96 -3.64 c-1.28 -2.24 -3.64 -3.6 -6.2 -3.6 z\"></path></g><g id=\"SvgjsG2571\" featurekey=\"sloganFeature-0\" transform=\"matrix(0.3667750656604767,0,0,0.3667750656604767,120,51.81402005616467)\" fill=\"url(#SvgjsLinearGradient2581)\"><path d=\"M7.04 20 c-1.22 0 -2.38 -0.32 -3.48 -0.96 c-2.2 -1.26 -3.56 -3.58 -3.56 -6.06 c0 -1.24 0.32 -2.4 0.96 -3.5 c1.26 -2.16 3.62 -3.52 6.08 -3.52 c1.22 0 2.4 0.32 3.5 0.94 c2.2 1.28 3.52 3.66 3.52 6.08 c0 1.22 -0.32 2.36 -0.94 3.46 c-1.28 2.2 -3.6 3.56 -6.08 3.56 z M7.04 6.66 c-1.14 0 -2.2 0.28 -3.16 0.84 c-1.94 1.12 -3.14 3.18 -3.14 5.48 c0 1.14 0.28 2.2 0.84 3.16 c1.12 1.94 3.16 3.14 5.46 3.14 c1.14 0 2.2 -0.28 3.18 -0.84 c1.94 -1.12 3.14 -3.16 3.14 -5.46 c0 -1.14 -0.28 -2.2 -0.84 -3.18 c-1.12 -1.94 -3.24 -3.14 -5.48 -3.14 z M7.04 18.64 c-1 0 -1.94 -0.26 -2.84 -0.76 c-1.78 -1.02 -2.88 -2.88 -2.88 -4.9 c0 -1.02 0.26 -1.96 0.76 -2.84 c1.02 -1.76 2.82 -2.8 4.96 -2.8 c1.08 0 2.06 0.24 2.92 0.72 c1.72 0.96 2.72 2.76 2.72 4.92 c0 1.02 -0.24 1.96 -0.72 2.82 c-0.98 1.74 -2.9 2.84 -4.92 2.84 z M7.04 8.04 c-0.9 0 -1.72 0.22 -2.48 0.66 c-1.54 0.88 -2.48 2.46 -2.48 4.28 c0 0.88 0.22 1.7 0.68 2.46 c0.88 1.54 2.44 2.5 4.28 2.5 c0.9 0 1.72 -0.22 2.48 -0.68 c1.5 -0.88 2.46 -2.52 2.46 -4.28 c0 -0.9 -0.22 -1.74 -0.66 -2.5 c-0.88 -1.52 -2.54 -2.44 -4.28 -2.44 z M7.04 17.34 c-0.78 0 -1.52 -0.2 -2.18 -0.58 c-1.34 -0.78 -2.2 -2.26 -2.2 -3.78 c0 -0.78 0.2 -1.52 0.6 -2.2 c0.78 -1.36 2.16 -2.14 3.78 -2.14 c0.78 0 1.5 0.2 2.16 0.58 c1.34 0.78 2.12 2.14 2.12 3.76 c0 0.8 -0.18 1.52 -0.54 2.18 c-0.74 1.32 -2.16 2.18 -3.74 2.18 z M7.04 9.36 c-0.64 0 -1.24 0.16 -1.8 0.48 c-1.12 0.66 -1.84 1.84 -1.84 3.14 c0 0.64 0.16 1.24 0.48 1.78 c0.64 1.12 1.8 1.8 3.16 1.8 c0.66 0 1.28 -0.16 1.82 -0.48 c1.1 -0.64 1.76 -1.82 1.76 -3.1 c0 -0.66 -0.16 -1.26 -0.48 -1.82 c-0.64 -1.12 -1.82 -1.8 -3.1 -1.8 z M32.175 20 c-1.94 0 -3.42 -0.5 -4.4 -1.5 c-0.96 -0.96 -1.46 -2.38 -1.46 -4.06 l0 -8.42 l3.4 0 l0 8.42 c0 1.52 0.74 2.16 2.36 2.16 c1.58 0 2.44 -0.78 2.44 -2.16 l0 -8.42 l2.06 0 l0 8.42 c0 1.06 -0.28 2.06 -0.82 2.78 c-0.72 0.98 -1.86 1.44 -3.62 1.44 c-1.02 0 -1.84 -0.14 -2.46 -0.44 c-1.26 -0.58 -2.02 -1.88 -2.02 -3.78 l0 -7.14 l0.72 0 l0 7.14 c0 2.26 1.3 3.5 3.76 3.5 s3.72 -1.24 3.72 -3.5 l0 -7.7 l-0.62 0 l0 7.7 c0 1.76 -1.18 2.88 -3.16 2.88 c-2 0 -3.06 -1.02 -3.06 -2.88 l0 -7.7 l-1.98 0 l0 7.7 c0 3.18 1.76 4.84 5.14 4.84 c1.76 0 2.96 -0.42 3.78 -1.28 s1.26 -2.1 1.26 -3.56 l0 -8.42 l0.72 0 l0 8.42 c0 1.68 -0.52 3.08 -1.48 4.06 c-0.96 1 -2.38 1.5 -4.28 1.5 z M60.19 19.28 l-2.3 0 l-2.76 -5.14 l-1.86 0.02 l0 5.12 l-2.02 0 l0 -13.28 l-0.72 0 l0 14 l3.48 0 l0 -5.14 l0.7 0 l2.74 5.14 l3.94 0 l-2.76 -5.16 l-0.66 0.26 z M55.43 6.720000000000001 c2.9 0 4.54 1.3 4.54 3.68 c0 2.16 -1.3 3.48 -3.56 3.72 l-0.54 0.06 l2.5 4.62 l0.82 0 l-2.18 -4.06 c2.4 -0.42 3.68 -1.88 3.68 -4.34 c0 -0.82 -0.18 -1.56 -0.52 -2.22 c-0.8 -1.42 -2.44 -2.18 -4.74 -2.18 l-3.54 0 l0 12.78 l0.72 0 l0 -12.06 l2.82 0 z M55.269999999999996 13.52 c2.74 0 4.04 -0.94 4.04 -3.02 c0 -1.98 -1.36 -3.1 -3.54 -3.1 l-2.52 0 l0 2.1 l2.3 0 c1.06 0 1.6 0.3 1.6 0.9 c0 0.7 -0.66 1.04 -2 1.04 l-1.16 0 l0 -1.24 l-0.74 0 l0 1.96 l1.9 0 c1.78 0 2.72 -0.62 2.72 -1.76 c0 -0.36 -0.08 -0.64 -0.26 -0.86 c-0.34 -0.5 -1.02 -0.74 -2.06 -0.74 l-1.56 0 l0 -0.68 l1.78 0 c1.78 0 2.82 0.86 2.82 2.38 c0 1.58 -1.06 2.32 -3.32 2.32 l-2 0 l0 0.7 l2 0 z M102.32000000000001 8.02 c-1.2 -1.26 -2.74 -2 -4.24 -2 l-5.86 0 l0 0.72 l5.86 0.02 c0.94 0 1.84 0.3 2.7 0.88 c1.68 1.18 2.8 3.3 2.8 5.36 c0 1.08 -0.24 2.08 -0.74 3.02 c-1 1.86 -3.02 3.22 -4.76 3.22 l-5.14 0 l0 -11.22 l4.98 0.02 c0.72 0 1.42 0.22 2.08 0.68 c1.34 0.9 2.22 2.62 2.22 4.28 c0 1.22 -0.52 2.48 -1.46 3.46 c-0.88 0.88 -1.94 1.44 -2.82 1.44 l-2.28 0 l0.02 -7.9 l-0.7 0 l-0.02 8.26 l0 0.36 l2.98 0 c1.1 0 2.38 -0.62 3.36 -1.66 c1.06 -1.14 1.64 -2.54 1.64 -3.96 c0 -1.44 -0.56 -2.88 -1.58 -4 c-1.1 -1.1 -2.3 -1.7 -3.44 -1.7 l-5.7 0 l0 12.68 l5.86 0 c1.44 0 3 -0.74 4.18 -2 c1.3 -1.34 2.02 -3.12 2.02 -4.98 s-0.68 -3.62 -1.96 -4.98 z M97.86 17.259999999999998 c0.56 0 1.14 -0.22 1.76 -0.64 c1.22 -0.86 2 -2.3 2 -3.64 c0 -0.72 -0.18 -1.42 -0.52 -2.1 c-0.7 -1.34 -1.96 -2.18 -3.24 -2.18 l-4.3 0.02 l0.02 9.94 l0.72 0 l0 -9.24 l3.56 -0.02 c0.46 0 0.94 0.18 1.44 0.52 c1.02 0.72 1.6 1.84 1.6 3.06 c0 0.82 -0.38 1.74 -1 2.44 s-1.38 1.12 -2.04 1.12 l-1.42 0 l0 0.72 l1.42 0 z M117.075 6.039999999999999 l0.72 0 l0 13.24 l7.66 0 l0 -2 l-5.64 0 l0 -1.92 l0.72 0 l0 1.2 l5.64 0 l0 3.44 l-9.1 0 l0 -13.96 z M118.435 6.039999999999999 l7.64 0 l0 3.42 l-4.8 0 l0 -0.72 l4.08 0 l0 -1.98 l-6.2 0 l0 5.78 l4.66 0 l0 0.72 l-5.38 0 l0 -7.22 z M118.435 13.9 l6.08 0 l0 -2 l-4.7 0 l0 -4.54 l4.84 0 l0 0.72 l-4.12 0 l0 3.1 l4.7 0 l0 3.44 l-6.08 0 l0 3.32 l5.6 0 l0 0.72 l-6.32 0 l0 -4.76 z M140.75 16.7 c0.98 0.44 1.84 0.66 2.56 0.66 c0.36 0 0.58 -0.02 0.68 -0.08 c0.46 -0.12 0.78 -0.38 0.98 -0.78 l0.02 -0.04 c0.1 -0.18 0.14 -0.4 0.14 -0.68 c0 -0.14 -0.04 -0.3 -0.12 -0.5 l-0.04 -0.08 c-0.26 -0.54 -0.84 -0.9 -1.9 -1.24 l-0.2 -0.06 l-0.06 -0.02 c-1.62 -0.48 -2.66 -1.24 -3.16 -2.3 c-0.2 -0.4 -0.3 -0.84 -0.3 -1.32 c0 -0.5 0.1 -0.98 0.3 -1.48 l0.04 -0.08 c0.46 -0.92 1.2 -1.52 2.18 -1.82 c0.7 -0.1 1.1 -0.16 1.2 -0.16 c1.36 0 2.94 0.56 4.72 1.66 l0.38 -0.62 c-1.94 -1.18 -3.62 -1.76 -5.08 -1.76 c-0.58 0 -1.06 0.06 -1.4 0.2 c-1.18 0.32 -2.06 1.04 -2.64 2.18 l-0.06 0.14 c-0.24 0.58 -0.36 1.16 -0.36 1.74 c0 0.62 0.12 1.16 0.36 1.64 c0.62 1.24 1.82 2.12 3.62 2.66 l0.24 0.08 c0.82 0.26 1.3 0.54 1.48 0.86 l0.02 0.04 c0.04 0.06 0.06 0.14 0.06 0.24 c0 0.18 -0.02 0.3 -0.08 0.4 c-0.14 0.32 -0.48 0.48 -1.02 0.48 c-0.86 0 -2.1 -0.44 -3.06 -1.06 l-0.3 -0.18 l-1.76 2.84 l0.3 0.18 c1.42 0.96 3.3 1.56 4.82 1.56 c0.5 0 0.96 -0.06 1.38 -0.18 c1.18 -0.34 2.06 -1.08 2.64 -2.2 l0.08 -0.14 c0.24 -0.62 0.36 -1.2 0.36 -1.74 c0 -0.48 -0.16 -1.08 -0.46 -1.82 c-0.54 -1.08 -1.68 -1.9 -3.46 -2.46 l-0.28 -0.08 c-0.56 -0.18 -0.94 -0.36 -1.12 -0.5 c-0.24 -0.2 -0.38 -0.34 -0.44 -0.42 l-0.04 -0.22 c0 -0.2 0.04 -0.38 0.14 -0.52 c0.16 -0.3 0.32 -0.38 0.96 -0.38 c0.86 0 2.1 0.44 3.06 1.06 l0.3 0.18 l1.08 -1.72 l-0.32 -0.18 c-1.22 -0.8 -2.88 -1.36 -4.1 -1.36 c-0.54 0 -0.88 0.04 -1.06 0.14 c-0.82 0.24 -1.44 0.76 -1.84 1.54 c-0.18 0.34 -0.26 0.74 -0.26 1.24 c0 0.38 0.08 0.74 0.24 1.08 c0.42 0.9 1.36 1.56 2.82 2 l0.26 0.08 l0.54 0.2 c0.3 0.12 0.62 0.28 0.98 0.48 c0.64 0.38 0.96 0.92 0.96 1.64 c0 0.4 -0.1 0.78 -0.28 1.12 c-0.42 0.74 -1.14 1.12 -2.14 1.12 c-0.68 0 -1.64 -0.26 -2.88 -0.76 l-0.34 0.58 l-0.02 0.04 c1.14 0.58 2.22 0.86 3.26 0.86 c0.58 0 1.12 -0.12 1.6 -0.36 c0.94 -0.46 1.52 -1.42 1.52 -2.62 c0 -1.9 -1.46 -2.46 -3 -3 l-0.26 -0.08 c-1.26 -0.38 -2.04 -0.9 -2.36 -1.6 c-0.12 -0.24 -0.18 -0.5 -0.18 -0.8 c0 -0.38 0.06 -0.68 0.2 -0.94 c0.32 -0.58 0.78 -0.96 1.38 -1.14 l0.8 -0.1 c1.06 0 2.22 0.36 3.48 1.06 l-0.32 0.5 c-1.3 -0.64 -2.34 -0.96 -3.1 -0.96 c-0.38 0 -0.6 0.02 -0.7 0.08 c-0.44 0.12 -0.76 0.38 -0.98 0.8 l-0.02 0.04 c-0.1 0.18 -0.14 0.42 -0.14 0.72 c0 0.22 0.04 0.38 0.1 0.48 c0.26 0.54 0.94 0.98 2.02 1.3 l0.26 0.08 l0.5 0.16 c0.06 0.02 0.38 0.16 0.96 0.44 c0.78 0.44 1.34 1 1.66 1.66 c0.2 0.4 0.3 0.84 0.3 1.32 c0 0.58 -0.1 1.08 -0.32 1.5 l-0.04 0.08 c-0.46 0.92 -1.2 1.52 -2.18 1.82 c-0.7 0.1 -1.1 0.16 -1.2 0.16 c-1.02 0 -2.34 -0.38 -3.56 -0.96 l-0.56 -0.3 l1 -1.62 z M164.665 8.6 l4.78 0 l0 -1.9 l-8.5 0 l0 0.62 l7.82 0 l0 0.72 l-8.54 0 l0 -2.06 l9.94 0 l0 3.34 l-4.78 0 l0 9.36 l-0.72 0 l0 -10.08 z M163.325 9.32 l-3.1 0 l0 -0.72 l3.82 0 l0 10.66 l2 0 l0 -9.32 l0.72 0 l0 10.06 l-3.44 0 l0 -10.68 z M182.45999999999998 6 l2.1 0 l0 12.66 l-0.72 0 l0 -11.94 l-0.66 0 l0 12.56 l2.02 0 l0 -13.28 l0.72 0 l0 14 l-3.46 0 l0 -14 z M208.055 14.3 l-8.18 -8.3 l-1 0 l9.9 10.06 l0 -8.66 l-0.72 0 l0 6.9 z M207.395 12.7 l0 -6 l2.04 0 l0 12.58 l-0.34 0 l-0.08 -0.08 l-9.16 -9.28 l0 10.08 l2.1 0 l0 -5.9 l-0.74 -0.76 l0 5.94 l-0.64 0 l0 -7.6 l8.3 8.32 l1.28 0 l0 -14 l-3.48 0 l0 5.92 z M199.19500000000002 20 l0 -11.7 l9.58 9.72 l0 -1.06 l-10.28 -10.38 l0 13.42 l0.7 0 z M223.89000000000004 18.76 l0.88 0 l0.7 -1.68 l5.22 0.02 l1.28 2.9 l3.68 -0.02 l-6.3 -13.98 l-1.28 0 l-6.26 13.98 l3.9 0 l0.68 -1.6 l3.98 0 l-0.3 -0.68 l-4.12 0 l-0.64 1.58 l-2.38 0 l5.54 -12.6 l0.48 0 l5.56 12.6 l-2.12 0 l-1.28 -2.86 l-6.2 0 z M226.27000000000004 15.24 l2.44 -5.82 l4.1 9.32 l0.82 0 l-4.92 -10.96 l-3.6 8.08 l5.8 0 l-2.2 -4.86 l-1.52 3.66 l0.78 0 l0.74 -1.82 l1.1 2.4 l-3.54 0 z M252.54500000000004 8.6 l4.78 0 l0 -1.9 l-8.5 0 l0 0.62 l7.82 0 l0 0.72 l-8.54 0 l0 -2.06 l9.94 0 l0 3.34 l-4.78 0 l0 9.36 l-0.72 0 l0 -10.08 z M251.20500000000004 9.32 l-3.1 0 l0 -0.72 l3.82 0 l0 10.66 l2 0 l0 -9.32 l0.72 0 l0 10.06 l-3.44 0 l0 -10.68 z M270.34000000000003 6 l2.1 0 l0 12.66 l-0.72 0 l0 -11.94 l-0.66 0 l0 12.56 l2.02 0 l0 -13.28 l0.72 0 l0 14 l-3.46 0 l0 -14 z M293.27500000000003 20 c-1.22 0 -2.38 -0.32 -3.48 -0.96 c-2.2 -1.26 -3.56 -3.58 -3.56 -6.06 c0 -1.24 0.32 -2.4 0.96 -3.5 c1.26 -2.16 3.62 -3.52 6.08 -3.52 c1.22 0 2.4 0.32 3.5 0.94 c2.2 1.28 3.52 3.66 3.52 6.08 c0 1.22 -0.32 2.36 -0.94 3.46 c-1.28 2.2 -3.6 3.56 -6.08 3.56 z M293.27500000000003 6.66 c-1.14 0 -2.2 0.28 -3.16 0.84 c-1.94 1.12 -3.14 3.18 -3.14 5.48 c0 1.14 0.28 2.2 0.84 3.16 c1.12 1.94 3.16 3.14 5.46 3.14 c1.14 0 2.2 -0.28 3.18 -0.84 c1.94 -1.12 3.14 -3.16 3.14 -5.46 c0 -1.14 -0.28 -2.2 -0.84 -3.18 c-1.12 -1.94 -3.24 -3.14 -5.48 -3.14 z M293.27500000000003 18.64 c-1 0 -1.94 -0.26 -2.84 -0.76 c-1.78 -1.02 -2.88 -2.88 -2.88 -4.9 c0 -1.02 0.26 -1.96 0.76 -2.84 c1.02 -1.76 2.82 -2.8 4.96 -2.8 c1.08 0 2.06 0.24 2.92 0.72 c1.72 0.96 2.72 2.76 2.72 4.92 c0 1.02 -0.24 1.96 -0.72 2.82 c-0.98 1.74 -2.9 2.84 -4.92 2.84 z M293.27500000000003 8.04 c-0.9 0 -1.72 0.22 -2.48 0.66 c-1.54 0.88 -2.48 2.46 -2.48 4.28 c0 0.88 0.22 1.7 0.68 2.46 c0.88 1.54 2.44 2.5 4.28 2.5 c0.9 0 1.72 -0.22 2.48 -0.68 c1.5 -0.88 2.46 -2.52 2.46 -4.28 c0 -0.9 -0.22 -1.74 -0.66 -2.5 c-0.88 -1.52 -2.54 -2.44 -4.28 -2.44 z M293.27500000000003 17.34 c-0.78 0 -1.52 -0.2 -2.18 -0.58 c-1.34 -0.78 -2.2 -2.26 -2.2 -3.78 c0 -0.78 0.2 -1.52 0.6 -2.2 c0.78 -1.36 2.16 -2.14 3.78 -2.14 c0.78 0 1.5 0.2 2.16 0.58 c1.34 0.78 2.12 2.14 2.12 3.76 c0 0.8 -0.18 1.52 -0.54 2.18 c-0.74 1.32 -2.16 2.18 -3.74 2.18 z M293.27500000000003 9.36 c-0.64 0 -1.24 0.16 -1.8 0.48 c-1.12 0.66 -1.84 1.84 -1.84 3.14 c0 0.64 0.16 1.24 0.48 1.78 c0.64 1.12 1.8 1.8 3.16 1.8 c0.66 0 1.28 -0.16 1.82 -0.48 c1.1 -0.64 1.76 -1.82 1.76 -3.1 c0 -0.66 -0.16 -1.26 -0.48 -1.82 c-0.64 -1.12 -1.82 -1.8 -3.1 -1.8 z M321.59000000000003 14.3 l-8.18 -8.3 l-1 0 l9.9 10.06 l0 -8.66 l-0.72 0 l0 6.9 z M320.93 12.7 l0 -6 l2.04 0 l0 12.58 l-0.34 0 l-0.08 -0.08 l-9.16 -9.28 l0 10.08 l2.1 0 l0 -5.9 l-0.74 -0.76 l0 5.94 l-0.64 0 l0 -7.6 l8.3 8.32 l1.28 0 l0 -14 l-3.48 0 l0 5.92 z M312.73 20 l0 -11.7 l9.58 9.72 l0 -1.06 l-10.28 -10.38 l0 13.42 l0.7 0 z M354.40000000000003 6 l2.1 0 l0 12.66 l-0.72 0 l0 -11.94 l-0.66 0 l0 12.56 l2.02 0 l0 -13.28 l0.72 0 l0 14 l-3.46 0 l0 -14 z M373.235 16.7 c0.98 0.44 1.84 0.66 2.56 0.66 c0.36 0 0.58 -0.02 0.68 -0.08 c0.46 -0.12 0.78 -0.38 0.98 -0.78 l0.02 -0.04 c0.1 -0.18 0.14 -0.4 0.14 -0.68 c0 -0.14 -0.04 -0.3 -0.12 -0.5 l-0.04 -0.08 c-0.26 -0.54 -0.84 -0.9 -1.9 -1.24 l-0.2 -0.06 l-0.06 -0.02 c-1.62 -0.48 -2.66 -1.24 -3.16 -2.3 c-0.2 -0.4 -0.3 -0.84 -0.3 -1.32 c0 -0.5 0.1 -0.98 0.3 -1.48 l0.04 -0.08 c0.46 -0.92 1.2 -1.52 2.18 -1.82 c0.7 -0.1 1.1 -0.16 1.2 -0.16 c1.36 0 2.94 0.56 4.72 1.66 l0.38 -0.62 c-1.94 -1.18 -3.62 -1.76 -5.08 -1.76 c-0.58 0 -1.06 0.06 -1.4 0.2 c-1.18 0.32 -2.06 1.04 -2.64 2.18 l-0.06 0.14 c-0.24 0.58 -0.36 1.16 -0.36 1.74 c0 0.62 0.12 1.16 0.36 1.64 c0.62 1.24 1.82 2.12 3.62 2.66 l0.24 0.08 c0.82 0.26 1.3 0.54 1.48 0.86 l0.02 0.04 c0.04 0.06 0.06 0.14 0.06 0.24 c0 0.18 -0.02 0.3 -0.08 0.4 c-0.14 0.32 -0.48 0.48 -1.02 0.48 c-0.86 0 -2.1 -0.44 -3.06 -1.06 l-0.3 -0.18 l-1.76 2.84 l0.3 0.18 c1.42 0.96 3.3 1.56 4.82 1.56 c0.5 0 0.96 -0.06 1.38 -0.18 c1.18 -0.34 2.06 -1.08 2.64 -2.2 l0.08 -0.14 c0.24 -0.62 0.36 -1.2 0.36 -1.74 c0 -0.48 -0.16 -1.08 -0.46 -1.82 c-0.54 -1.08 -1.68 -1.9 -3.46 -2.46 l-0.28 -0.08 c-0.56 -0.18 -0.94 -0.36 -1.12 -0.5 c-0.24 -0.2 -0.38 -0.34 -0.44 -0.42 l-0.04 -0.22 c0 -0.2 0.04 -0.38 0.14 -0.52 c0.16 -0.3 0.32 -0.38 0.96 -0.38 c0.86 0 2.1 0.44 3.06 1.06 l0.3 0.18 l1.08 -1.72 l-0.32 -0.18 c-1.22 -0.8 -2.88 -1.36 -4.1 -1.36 c-0.54 0 -0.88 0.04 -1.06 0.14 c-0.82 0.24 -1.44 0.76 -1.84 1.54 c-0.18 0.34 -0.26 0.74 -0.26 1.24 c0 0.38 0.08 0.74 0.24 1.08 c0.42 0.9 1.36 1.56 2.82 2 l0.26 0.08 l0.54 0.2 c0.3 0.12 0.62 0.28 0.98 0.48 c0.64 0.38 0.96 0.92 0.96 1.64 c0 0.4 -0.1 0.78 -0.28 1.12 c-0.42 0.74 -1.14 1.12 -2.14 1.12 c-0.68 0 -1.64 -0.26 -2.88 -0.76 l-0.34 0.58 l-0.02 0.04 c1.14 0.58 2.22 0.86 3.26 0.86 c0.58 0 1.12 -0.12 1.6 -0.36 c0.94 -0.46 1.52 -1.42 1.52 -2.62 c0 -1.9 -1.46 -2.46 -3 -3 l-0.26 -0.08 c-1.26 -0.38 -2.04 -0.9 -2.36 -1.6 c-0.12 -0.24 -0.18 -0.5 -0.18 -0.8 c0 -0.38 0.06 -0.68 0.2 -0.94 c0.32 -0.58 0.78 -0.96 1.38 -1.14 l0.8 -0.1 c1.06 0 2.22 0.36 3.48 1.06 l-0.32 0.5 c-1.3 -0.64 -2.34 -0.96 -3.1 -0.96 c-0.38 0 -0.6 0.02 -0.7 0.08 c-0.44 0.12 -0.76 0.38 -0.98 0.8 l-0.02 0.04 c-0.1 0.18 -0.14 0.42 -0.14 0.72 c0 0.22 0.04 0.38 0.1 0.48 c0.26 0.54 0.94 0.98 2.02 1.3 l0.26 0.08 l0.5 0.16 c0.06 0.02 0.38 0.16 0.96 0.44 c0.78 0.44 1.34 1 1.66 1.66 c0.2 0.4 0.3 0.84 0.3 1.32 c0 0.58 -0.1 1.08 -0.32 1.5 l-0.04 0.08 c-0.46 0.92 -1.2 1.52 -2.18 1.82 c-0.7 0.1 -1.1 0.16 -1.2 0.16 c-1.02 0 -2.34 -0.38 -3.56 -0.96 l-0.56 -0.3 l1 -1.62 z M420.90500000000003 13.059999999999999 c0.46 -0.7 0.7 -1.58 0.7 -2.6 c0 -2.78 -1.64 -4.36 -4.46 -4.36 l-4.62 0 l0 6.02 l4.7 0 c1.06 0 1.7 -0.6 1.7 -1.66 c0 -0.56 -0.2 -1.02 -0.6 -1.4 c-0.26 -0.24 -0.7 -0.38 -1.1 -0.38 l-3.34 0 l0 2.1 l0.72 0 l0 -1.4 l2.62 0 c0.58 0 0.98 0.38 0.98 1.08 c0 0.62 -0.32 0.94 -0.98 0.94 l-4 0 l0 -4.58 l3.82 0 c2.48 0 3.86 1.26 3.86 3.64 c0 0.78 -0.16 1.46 -0.5 2.08 l-0.2 0.32 l-0.22 0.22 l0.26 0.26 l0.38 0.44 c0.24 0.3 0.36 0.92 0.36 1.88 c0 2.34 -1.4 3.6 -3.94 3.6 l-5.16 0 l0 -13.18 l-0.72 0 l0 13.9 l5.88 0 c2.9 0 4.66 -1.6 4.66 -4.32 c0 -1.04 -0.26 -1.9 -0.8 -2.6 z M417.52500000000003 18.68 c0.7 0 1.36 -0.26 1.98 -0.8 c0.58 -0.58 0.88 -1.28 0.88 -2.08 c0 -1 -0.32 -1.78 -0.98 -2.36 l-0.52 -0.38 c0.9 -0.5 1.44 -1.46 1.44 -2.72 c0 -0.54 -0.12 -1.06 -0.36 -1.52 c-0.48 -0.92 -1.34 -1.42 -2.44 -1.42 l-3.62 0 l0 0.72 l3.62 0 c0.34 0 0.66 0.1 1 0.3 c0.64 0.4 1.06 1.12 1.06 1.92 c0 1.38 -0.84 2.36 -2.12 2.36 l-4.92 0 l0 0.72 l4.92 0 c1.34 0 2.2 0.92 2.2 2.38 c0 0.8 -0.34 1.42 -1.04 1.84 c-0.34 0.2 -0.7 0.3 -1.1 0.3 l-4.3 0 l0 -3.16 l4 0 c0.7 0 1.04 0.32 1.04 0.94 c0 0.64 -0.34 0.96 -1.04 0.96 l-2.62 0 l0 -1.32 l-0.72 0 l0 2.04 l3.34 0 c0.78 0 1.3 -0.28 1.58 -0.86 c0.12 -0.22 0.18 -0.5 0.18 -0.82 c0 -1.04 -0.7 -1.68 -1.76 -1.68 l-4.7 0 l0 4.64 l5 0 z M433.5 6.039999999999999 l0.72 0 l0 13.24 l7.66 0 l0 -2 l-5.64 0 l0 -1.92 l0.72 0 l0 1.2 l5.64 0 l0 3.44 l-9.1 0 l0 -13.96 z M434.86 6.039999999999999 l7.64 0 l0 3.42 l-4.8 0 l0 -0.72 l4.08 0 l0 -1.98 l-6.2 0 l0 5.78 l4.66 0 l0 0.72 l-5.38 0 l0 -7.22 z M434.86 13.9 l6.08 0 l0 -2 l-4.7 0 l0 -4.54 l4.84 0 l0 0.72 l-4.12 0 l0 3.1 l4.7 0 l0 3.44 l-6.08 0 l0 3.32 l5.6 0 l0 0.72 l-6.32 0 l0 -4.76 z M460.995 18.72 l0.72 0 l-0.02 -5.82 l4.26 -6.18 l0.78 0 l-4.34 6.22 l0 6.34 l-2.06 0 l0.02 -6.34 l-4.86 -6.94 l-0.88 0 l4.98 7.16 l0 6.84 l3.52 0 l0 -6.84 l5 -7.16 l-2.52 0 l-4.6 6.66 l0 6.06 z M463.935 6 l-3.34 4.9 l-2.96 -4.18 l0.78 0 l2.24 3.16 l0.44 -0.64 l-2.3 -3.24 l-2.52 0 l3.98 5.66 l0.34 0.52 l4.22 -6.18 l-0.88 0 z M486.91 20 c-1.22 0 -2.38 -0.32 -3.48 -0.96 c-2.2 -1.26 -3.56 -3.58 -3.56 -6.06 c0 -1.24 0.32 -2.4 0.96 -3.5 c1.26 -2.16 3.62 -3.52 6.08 -3.52 c1.22 0 2.4 0.32 3.5 0.94 c2.2 1.28 3.52 3.66 3.52 6.08 c0 1.22 -0.32 2.36 -0.94 3.46 c-1.28 2.2 -3.6 3.56 -6.08 3.56 z M486.91 6.66 c-1.14 0 -2.2 0.28 -3.16 0.84 c-1.94 1.12 -3.14 3.18 -3.14 5.48 c0 1.14 0.28 2.2 0.84 3.16 c1.12 1.94 3.16 3.14 5.46 3.14 c1.14 0 2.2 -0.28 3.18 -0.84 c1.94 -1.12 3.14 -3.16 3.14 -5.46 c0 -1.14 -0.28 -2.2 -0.84 -3.18 c-1.12 -1.94 -3.24 -3.14 -5.48 -3.14 z M486.91 18.64 c-1 0 -1.94 -0.26 -2.84 -0.76 c-1.78 -1.02 -2.88 -2.88 -2.88 -4.9 c0 -1.02 0.26 -1.96 0.76 -2.84 c1.02 -1.76 2.82 -2.8 4.96 -2.8 c1.08 0 2.06 0.24 2.92 0.72 c1.72 0.96 2.72 2.76 2.72 4.92 c0 1.02 -0.24 1.96 -0.72 2.82 c-0.98 1.74 -2.9 2.84 -4.92 2.84 z M486.91 8.04 c-0.9 0 -1.72 0.22 -2.48 0.66 c-1.54 0.88 -2.48 2.46 -2.48 4.28 c0 0.88 0.22 1.7 0.68 2.46 c0.88 1.54 2.44 2.5 4.28 2.5 c0.9 0 1.72 -0.22 2.48 -0.68 c1.5 -0.88 2.46 -2.52 2.46 -4.28 c0 -0.9 -0.22 -1.74 -0.66 -2.5 c-0.88 -1.52 -2.54 -2.44 -4.28 -2.44 z M486.91 17.34 c-0.78 0 -1.52 -0.2 -2.18 -0.58 c-1.34 -0.78 -2.2 -2.26 -2.2 -3.78 c0 -0.78 0.2 -1.52 0.6 -2.2 c0.78 -1.36 2.16 -2.14 3.78 -2.14 c0.78 0 1.5 0.2 2.16 0.58 c1.34 0.78 2.12 2.14 2.12 3.76 c0 0.8 -0.18 1.52 -0.54 2.18 c-0.74 1.32 -2.16 2.18 -3.74 2.18 z M486.91 9.36 c-0.64 0 -1.24 0.16 -1.8 0.48 c-1.12 0.66 -1.84 1.84 -1.84 3.14 c0 0.64 0.16 1.24 0.48 1.78 c0.64 1.12 1.8 1.8 3.16 1.8 c0.66 0 1.28 -0.16 1.82 -0.48 c1.1 -0.64 1.76 -1.82 1.76 -3.1 c0 -0.66 -0.16 -1.26 -0.48 -1.82 c-0.64 -1.12 -1.82 -1.8 -3.1 -1.8 z M512.0450000000001 20 c-1.94 0 -3.42 -0.5 -4.4 -1.5 c-0.96 -0.96 -1.46 -2.38 -1.46 -4.06 l0 -8.42 l3.4 0 l0 8.42 c0 1.52 0.74 2.16 2.36 2.16 c1.58 0 2.44 -0.78 2.44 -2.16 l0 -8.42 l2.06 0 l0 8.42 c0 1.06 -0.28 2.06 -0.82 2.78 c-0.72 0.98 -1.86 1.44 -3.62 1.44 c-1.02 0 -1.84 -0.14 -2.46 -0.44 c-1.26 -0.58 -2.02 -1.88 -2.02 -3.78 l0 -7.14 l0.72 0 l0 7.14 c0 2.26 1.3 3.5 3.76 3.5 s3.72 -1.24 3.72 -3.5 l0 -7.7 l-0.62 0 l0 7.7 c0 1.76 -1.18 2.88 -3.16 2.88 c-2 0 -3.06 -1.02 -3.06 -2.88 l0 -7.7 l-1.98 0 l0 7.7 c0 3.18 1.76 4.84 5.14 4.84 c1.76 0 2.96 -0.42 3.78 -1.28 s1.26 -2.1 1.26 -3.56 l0 -8.42 l0.72 0 l0 8.42 c0 1.68 -0.52 3.08 -1.48 4.06 c-0.96 1 -2.38 1.5 -4.28 1.5 z M539.72 14.3 l-8.18 -8.3 l-1 0 l9.9 10.06 l0 -8.66 l-0.72 0 l0 6.9 z M539.0600000000001 12.7 l0 -6 l2.04 0 l0 12.58 l-0.34 0 l-0.08 -0.08 l-9.16 -9.28 l0 10.08 l2.1 0 l0 -5.9 l-0.74 -0.76 l0 5.94 l-0.64 0 l0 -7.6 l8.3 8.32 l1.28 0 l0 -14 l-3.48 0 l0 5.92 z M530.86 20 l0 -11.7 l9.58 9.72 l0 -1.06 l-10.28 -10.38 l0 13.42 l0.7 0 z M564.475 8.02 c-1.2 -1.26 -2.74 -2 -4.24 -2 l-5.86 0 l0 0.72 l5.86 0.02 c0.94 0 1.84 0.3 2.7 0.88 c1.68 1.18 2.8 3.3 2.8 5.36 c0 1.08 -0.24 2.08 -0.74 3.02 c-1 1.86 -3.02 3.22 -4.76 3.22 l-5.14 0 l0 -11.22 l4.98 0.02 c0.72 0 1.42 0.22 2.08 0.68 c1.34 0.9 2.22 2.62 2.22 4.28 c0 1.22 -0.52 2.48 -1.46 3.46 c-0.88 0.88 -1.94 1.44 -2.82 1.44 l-2.28 0 l0.02 -7.9 l-0.7 0 l-0.02 8.26 l0 0.36 l2.98 0 c1.1 0 2.38 -0.62 3.36 -1.66 c1.06 -1.14 1.64 -2.54 1.64 -3.96 c0 -1.44 -0.56 -2.88 -1.58 -4 c-1.1 -1.1 -2.3 -1.7 -3.44 -1.7 l-5.7 0 l0 12.68 l5.86 0 c1.44 0 3 -0.74 4.18 -2 c1.3 -1.34 2.02 -3.12 2.02 -4.98 s-0.68 -3.62 -1.96 -4.98 z M560.0150000000001 17.259999999999998 c0.56 0 1.14 -0.22 1.76 -0.64 c1.22 -0.86 2 -2.3 2 -3.64 c0 -0.72 -0.18 -1.42 -0.52 -2.1 c-0.7 -1.34 -1.96 -2.18 -3.24 -2.18 l-4.3 0.02 l0.02 9.94 l0.72 0 l0 -9.24 l3.56 -0.02 c0.46 0 0.94 0.18 1.44 0.52 c1.02 0.72 1.6 1.84 1.6 3.06 c0 0.82 -0.38 1.74 -1 2.44 s-1.38 1.12 -2.04 1.12 l-1.42 0 l0 0.72 l1.42 0 z M601.7850000000001 8.6 l4.78 0 l0 -1.9 l-8.5 0 l0 0.62 l7.82 0 l0 0.72 l-8.54 0 l0 -2.06 l9.94 0 l0 3.34 l-4.78 0 l0 9.36 l-0.72 0 l0 -10.08 z M600.445 9.32 l-3.1 0 l0 -0.72 l3.82 0 l0 10.66 l2 0 l0 -9.32 l0.72 0 l0 10.06 l-3.44 0 l0 -10.68 z M619.5600000000001 6 l3.48 0 l0 4.62 l-0.74 0 l0 -3.88 l-2.02 0 l0 12.52 l2.02 0 l0 -3.86 l0.74 0 l0 4.6 l-3.48 0 l0 -14 z M620.94 7.32 l0.72 0 l0 3.92 l6.1 0 l0 -5.24 l0.7 0 l0 5.94 l-7.52 0 l0 -4.62 z M630.6000000000001 6.74 l-0.68 0 l0 5.26 l-0.72 0 l0 -6 l2.1 0 l0 14 l-0.7 0 l0 -13.26 z M627.7600000000001 14.76 l-6.1 0 l0 4.02 l-0.74 0 l0 -4.76 l7.54 0 l0 5.24 l0.74 0 l0 -5.9 l-8.28 0 l0 -0.7 l9 0 l0 7.34 l-2.16 0 l0 -5.24 z M643.4550000000002 6.039999999999999 l0.72 0 l0 13.24 l7.66 0 l0 -2 l-5.64 0 l0 -1.92 l0.72 0 l0 1.2 l5.64 0 l0 3.44 l-9.1 0 l0 -13.96 z M644.8150000000002 6.039999999999999 l7.64 0 l0 3.42 l-4.8 0 l0 -0.72 l4.08 0 l0 -1.98 l-6.2 0 l0 5.78 l4.66 0 l0 0.72 l-5.38 0 l0 -7.22 z M644.8150000000002 13.9 l6.08 0 l0 -2 l-4.7 0 l0 -4.54 l4.84 0 l0 0.72 l-4.12 0 l0 3.1 l4.7 0 l0 3.44 l-6.08 0 l0 3.32 l5.6 0 l0 0.72 l-6.32 0 l0 -4.76 z M690.5050000000002 20 c-1.24 0 -2.4 -0.32 -3.46 -0.96 c-2.16 -1.26 -3.52 -3.64 -3.52 -6.02 c0 -1.24 0.32 -2.42 0.96 -3.52 c1.28 -2.22 3.48 -3.48 6.02 -3.48 c1.74 0 3.42 0.66 4.7 1.84 c0.04 0.02 0.1 0.06 0.16 0.12 l0.14 0.16 l-0.5 0.52 l-0.28 -0.28 c-1.14 -1.06 -2.64 -1.64 -4.22 -1.64 c-1.12 0 -2.16 0.28 -3.12 0.84 c-1.94 1.12 -3.14 3.2 -3.14 5.44 c0 1.12 0.28 2.16 0.84 3.12 c1.12 1.94 3.18 3.14 5.42 3.14 c1.36 0 2.4 -0.38 4.1 -1.48 l0 -4.6 l-4.38 0 l0 -0.72 l5.08 0 l0 5.7 l-0.14 0.12 c-1.78 1.22 -3.06 1.7 -4.66 1.7 z M690.5050000000002 18.64 c-1 0 -1.94 -0.26 -2.8 -0.76 c-1.76 -1.02 -2.84 -2.86 -2.84 -4.86 c0 -1.02 0.26 -1.98 0.76 -2.86 c1.02 -1.74 2.82 -2.78 4.88 -2.78 c1.14 0 2.24 0.36 3.3 1.06 l0.52 0.4 l0.26 0.26 l-1.44 1.56 l-0.64 -0.5 c-0.58 -0.42 -1.26 -0.64 -2 -0.64 c-0.6 0 -1.18 0.16 -1.72 0.46 c-1.1 0.64 -1.76 1.76 -1.76 3.04 c0 0.6 0.16 1.18 0.48 1.72 c0.62 1.1 1.74 1.76 3 1.76 c0.5 0 0.96 -0.1 1.38 -0.32 l0 -0.32 l-1.66 0 l0 -2.04 l3.74 0 l0 3.56 l-0.46 0.36 c-0.9 0.62 -1.82 0.9 -3 0.9 z M690.5050000000002 8.1 c-0.88 0 -1.7 0.22 -2.46 0.66 c-1.52 0.88 -2.46 2.5 -2.46 4.26 c0 0.88 0.22 1.7 0.66 2.44 c0.88 1.52 2.5 2.46 4.26 2.46 c0.98 0 1.86 -0.26 2.6 -0.76 l0.14 -0.12 l0 -2.5 l-2.3 0 l0 0.6 l1.66 0 l0 1.5 l-0.2 0.1 c-0.66 0.32 -1.28 0.48 -1.9 0.48 c-0.72 0 -1.42 -0.2 -2.08 -0.58 c-1.34 -0.78 -2.12 -2.08 -2.12 -3.62 c0 -0.76 0.18 -1.46 0.56 -2.12 c0.74 -1.28 2.1 -2.08 3.64 -2.08 c0.86 0 1.68 0.26 2.42 0.76 l0.14 0.1 l0.48 -0.52 l-0.16 -0.12 c-0.86 -0.62 -1.82 -0.94 -2.88 -0.94 z M709.5600000000002 18.76 l0.88 0 l0.7 -1.68 l5.22 0.02 l1.28 2.9 l3.68 -0.02 l-6.3 -13.98 l-1.28 0 l-6.26 13.98 l3.9 0 l0.68 -1.6 l3.98 0 l-0.3 -0.68 l-4.12 0 l-0.64 1.58 l-2.38 0 l5.54 -12.6 l0.48 0 l5.56 12.6 l-2.12 0 l-1.28 -2.86 l-6.2 0 z M711.9400000000002 15.24 l2.44 -5.82 l4.1 9.32 l0.82 0 l-4.92 -10.96 l-3.6 8.08 l5.8 0 l-2.2 -4.86 l-1.52 3.66 l0.78 0 l0.74 -1.82 l1.1 2.4 l-3.54 0 z M733.6150000000001 5.98 l2.06 0 l0 12.7 l-0.74 0 l0 -11.98 l-0.6 0 l0 12.58 l6.58 0 l0 -1.92 l-3.26 0 l0 -0.72 l3.98 0 l0 3.36 l-8.02 0 l0 -14.02 z M736.3350000000002 5.98 l0.72 0 l0 11.96 l3.22 0 l0 0.74 l-3.94 0 l0 -12.7 z M755.7700000000002 18.76 l0.88 0 l0.7 -1.68 l5.22 0.02 l1.28 2.9 l3.68 -0.02 l-6.3 -13.98 l-1.28 0 l-6.26 13.98 l3.9 0 l0.68 -1.6 l3.98 0 l-0.3 -0.68 l-4.12 0 l-0.64 1.58 l-2.38 0 l5.54 -12.6 l0.48 0 l5.56 12.6 l-2.12 0 l-1.28 -2.86 l-6.2 0 z M758.1500000000002 15.24 l2.44 -5.82 l4.1 9.32 l0.82 0 l-4.92 -10.96 l-3.6 8.08 l5.8 0 l-2.2 -4.86 l-1.52 3.66 l0.78 0 l0.74 -1.82 l1.1 2.4 l-3.54 0 z M786.0650000000002 9.84 l-0.76 1.18 l-2.82 -4.3 l0.76 0 l2.06 3.2 l0.42 -0.68 l-2.08 -3.24 l-2.48 0 l4.14 6.34 l4.04 -6.34 l-0.86 0 l-2.4 3.8 z M781.5850000000002 19.28 l-0.68 0 l4.04 -6.38 l-4.4 -6.88 l-0.86 0 l4.4 6.9 l-4.5 7.1 l2.38 -0.02 l8.48 -13.26 l0.72 0 l-4.74 7.44 l2.96 4.64 l0.86 0 l-2.98 -4.64 l5.22 -8.16 l-2.42 0 z M788.0050000000001 14.24 l3.26 5.04 l-2.28 0 l-2.96 -4.5 l-3.36 5.22 l0.86 0 l2.52 -3.9 l2.54 3.9 l4 0 l-4.08 -6.34 l-0.06 -0.1 z M810.8200000000002 18.72 l0.72 0 l-0.02 -5.82 l4.26 -6.18 l0.78 0 l-4.34 6.22 l0 6.34 l-2.06 0 l0.02 -6.34 l-4.86 -6.94 l-0.88 0 l4.98 7.16 l0 6.84 l3.52 0 l0 -6.84 l5 -7.16 l-2.52 0 l-4.6 6.66 l0 6.06 z M813.7600000000002 6 l-3.34 4.9 l-2.96 -4.18 l0.78 0 l2.24 3.16 l0.44 -0.64 l-2.3 -3.24 l-2.52 0 l3.98 5.66 l0.34 0.52 l4.22 -6.18 l-0.88 0 z\"></path></g></svg>)}","import React from 'react'\r\nimport { navigate,graphql } from 'gatsby'\r\nimport Logo from \"../../images/logo\"\r\nimport * as styles from \"./styles.module.css\"\r\n\r\nconst KeyToLang = {\r\n    cn:\"中文\",\r\n    en:\"English\"\r\n}\r\nconst NextLang = {\r\n    cn:\"en\",\r\n    en:\"cn\"\r\n}\r\n\r\nexport default function Navbar({lang, path}){\r\n    const path_arr = path.split(\"/\")\r\n    const cur_lang = path_arr[1]\r\n    path_arr[1] = NextLang[cur_lang]\r\n    const new_path = path_arr.join(\"/\")\r\n    const new_lang = KeyToLang[NextLang[lang]]\r\n\r\n    return (\r\n    <div className={styles.container}>\r\n        <div className={styles.logo} onClick={()=>{\r\n            navigate(\"/\"+cur_lang)\r\n        }}>\r\n            <Logo/>\r\n        </div>\r\n        <div className={styles.lang} onClick={()=>{\r\n            navigate(new_path)\r\n        }}>{new_lang}</div>\r\n    </div>)\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"styles-module--container--09321\";\nexport var lang = \"styles-module--lang--e2861\";\nexport var logo = \"styles-module--logo--8d4fa\";"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","hasNativeLazyLoadSupport","j","HTMLImageElement","prototype","srcSet","width","height","layout","wrapperStyle","className","style","getMainProps","isLoading","isLoaded","images","loading","shouldLoad","_extends","opacity","getPlaceholderProps","placeholder","backgroundColor","objectFit","objectPosition","position","top","left","bottom","right","result","transition","Sizer","React","createElement","paddingTop","maxWidth","display","alt","role","src","LayoutWrapper","_ref","children","props","_objectWithoutPropertiesLoose","Fragment","Image","decoding","Picture","_ref2","fallback","sources","sizes","_ref6","media","type","key","fallbackImage","propTypes","PropTypes","displayName","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","removeNewLines","str","altValidator","rest","image","_excluded","Set","renderImageToStringPromise","renderImage","GatsbyImageHydrator","as","class","preactClass","onStartLoad","onLoad","onError","getWrapperProps","wStyle","wClass","wrapperProps","root","useRef","useMemo","JSON","stringify","sizer","useEffect","import","then","_ref7","renderImageToString","swapPlaceholderImage","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","animationFrame","cleanupCallback","_ref8","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","_getStaticImage","StaticImage","__imageData","imageData","__error","console","warn","imgClassName","imgStyle","placeholderBackgroundColor","cleanedImages","checkDimensionProps","validLayouts","GatsbyImageBrowser","Logo","viewBox","id","stopColor","offset","featurekey","transform","fill","xmlns","d","cx","cy","rx","ry","KeyToLang","cn","en","NextLang","Navbar","lang","path","path_arr","split","cur_lang","new_path","new_lang","onClick","navigate"],"sourceRoot":""}